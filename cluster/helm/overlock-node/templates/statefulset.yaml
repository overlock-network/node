apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "overlock-node.fullname" . }}
  labels:
    {{- include "overlock-node.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "overlock-node.fullname" . }}-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "overlock-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "overlock-node.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "overlock-node.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          {{- range $name, $port := .Values.service.ports }}
            - name: {{ $name }}
              containerPort: {{ $port }}
              protocol: TCP
          {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.volumeMounts .Values.secretVolume.enabled }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.secretVolume.enabled }}
            - name: {{ .Values.secretVolume.name }}
              mountPath: {{ .Values.secretVolume.mountPath }}
              readOnly: true
            {{- end }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.secretVolume.enabled }}
      volumes:
        - name: {{ .Values.secretVolume.name }}
          secret:
            secretName: {{ .Values.secretVolume.secretName }}
      {{- end }}
  volumeClaimTemplates:
    {{- range .Values.volumeClaimTemplates }}
    - metadata:
        name: {{ .name }}
      spec:
        accessModes:
          {{- toYaml .accessModes | nindent 10 }}
        resources:
          requests:
            storage: {{ .resources.requests.storage }}
        {{- if .storageClassName }}
        storageClassName: {{ .storageClassName }}
        {{- end }}
    {{- end }}
  
