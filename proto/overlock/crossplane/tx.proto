syntax = "proto3";

package overlock.crossplane;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "overlock/crossplane/composition.proto";
import "overlock/crossplane/configuration.proto";
import "overlock/crossplane/metadata.proto";
import "overlock/crossplane/params.proto";
import "overlock/crossplane/xrd.proto";

option go_package = "overlock/x/crossplane/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams (MsgUpdateParams) returns (MsgUpdateParamsResponse);
  
  // CreateComposition
  rpc CreateComposition (MsgCreateComposition) returns (MsgCreateCompositionResponse);
  
  // UpdateComposition
  rpc UpdateComposition (MsgUpdateComposition) returns (MsgUpdateCompositionResponse);
  
  // DeleteComposition
  rpc DeleteComposition (MsgDeleteComposition) returns (MsgDeleteCompositionResponse);
  
  // CreateXrd
  rpc CreateXrd (MsgCreateXrd) returns (MsgCreateXrdResponse);
  
  // UpdateXrd
  rpc UpdateXrd (MsgUpdateXrd) returns (MsgUpdateXrdResponse);
  
  // DeleteXrd
  rpc DeleteXrd (MsgDeleteXrd) returns (MsgDeleteXrdResponse);
  
  // CreateConfiguration
  rpc CreateConfiguration (MsgCreateConfiguration) returns (MsgCreateConfigurationResponse);
  
  // UpdateConfiguration
  rpc UpdateConfiguration (MsgUpdateConfiguration) returns (MsgUpdateConfigurationResponse);
  
  // DeleteConfiguration
  rpc DeleteConfiguration (MsgDeleteConfiguration) returns (MsgDeleteConfigurationResponse);
  rpc CreateEnvironment   (MsgCreateEnvironment  ) returns (MsgCreateEnvironmentResponse  );
  rpc UpdateEnvironment   (MsgUpdateEnvironment  ) returns (MsgUpdateEnvironmentResponse  );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                             "authority";
  option           (amino.name) = "overlock/x/crossplane/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgCreateComposition
message MsgCreateComposition {
  option (cosmos.msg.v1.signer) = "creator";
  string          creator  = 1;
  Metadata        metadata = 4;
  CompositionSpec spec     = 5;
}

// MsgCreateCompositionResponse
message MsgCreateCompositionResponse {
  uint64 id = 1;
}

// MsgUpdateComposition
message MsgUpdateComposition {
  option (cosmos.msg.v1.signer) = "creator";
  string          creator  = 1;
  uint64          id       = 2;
  Metadata        metadata = 5;
  CompositionSpec spec     = 6;
}

// MsgUpdateCompositionResponse
message MsgUpdateCompositionResponse {}

// MsgDeleteComposition
message MsgDeleteComposition {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

// MsgDeleteCompositionResponse
message MsgDeleteCompositionResponse {}

// MsgCreateXrd
message MsgCreateXrd {
  option (cosmos.msg.v1.signer) = "creator";
  string   creator  = 1;
  Metadata metadata = 4;
  XrdSpec  spec     = 5;
}

// MsgCreateXrdResponse
message MsgCreateXrdResponse {
  uint64 id = 1;
}

// MsgUpdateXrd
message MsgUpdateXrd {
  option (cosmos.msg.v1.signer) = "creator";
  string   creator  = 1;
  uint64   id       = 2;
  Metadata metadata = 5;
  XrdSpec  spec     = 6;
}

// MsgUpdateXrdResponse
message MsgUpdateXrdResponse {}

// MsgDeleteXrd
message MsgDeleteXrd {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

// MsgDeleteXrdResponse
message MsgDeleteXrdResponse {}

// MsgCreateConfiguration
message MsgCreateConfiguration {
  option (cosmos.msg.v1.signer) = "creator";
  string            creator  = 1;
  Metadata          metadata = 4;
  ConfigurationSpec spec     = 5;
}

// MsgCreateConfigurationResponse
message MsgCreateConfigurationResponse {
  uint64 id = 1;
}

// MsgUpdateConfiguration
message MsgUpdateConfiguration {
  option (cosmos.msg.v1.signer) = "creator";
  string            creator  = 1;
  uint64            id       = 2;
  Metadata          metadata = 5;
  ConfigurationSpec spec     = 6;
}

// MsgUpdateConfigurationResponse
message MsgUpdateConfigurationResponse {}

// MsgDeleteConfiguration
message MsgDeleteConfiguration {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

// MsgDeleteConfigurationResponse
message MsgDeleteConfigurationResponse {}

message MsgCreateEnvironment {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string name    = 2;
}

message MsgCreateEnvironmentResponse {
  uint64 id = 1;
}

message MsgUpdateEnvironment {
  option (cosmos.msg.v1.signer) = "creator";
  string creator  = 1;
  string name     = 2;
  string provider = 3;
}

message MsgUpdateEnvironmentResponse {
  uint64 id = 1;
}

